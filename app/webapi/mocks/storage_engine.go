// Code generated by moq; DO NOT EDIT.
// github.com/matryer/moq

package mocks

import (
	"context"
	"io"
	"sync"
)

// StorageEngineMock is a mock implementation of webapi.StorageEngine.
//
//	func TestSomethingThatUsesStorageEngine(t *testing.T) {
//
//		// make and configure a mocked webapi.StorageEngine
//		mockedStorageEngine := &StorageEngineMock{
//			BackupFunc: func(ctx context.Context, w io.Writer) error {
//				panic("mock out the Backup method")
//			},
//		}
//
//		// use mockedStorageEngine in code that requires webapi.StorageEngine
//		// and then make assertions.
//
//	}
type StorageEngineMock struct {
	// BackupFunc mocks the Backup method.
	BackupFunc func(ctx context.Context, w io.Writer) error

	// calls tracks calls to the methods.
	calls struct {
		// backup holds details about calls to the Backup method.
		Backup []struct {
			// ctx is the ctx argument value.
			Ctx context.Context
			// w is the w argument value.
			W io.Writer
		}
	}
	lockBackup sync.RWMutex
}

// Backup calls BackupFunc.
func (mock *StorageEngineMock) Backup(ctx context.Context, w io.Writer) error {
	if mock.BackupFunc == nil {
		panic("StorageEngineMock.BackupFunc: method is nil but StorageEngine.Backup was just called")
	}
	callInfo := struct {
		Ctx context.Context
		W   io.Writer
	}{
		Ctx: ctx,
		W:   w,
	}
	mock.lockBackup.Lock()
	mock.calls.Backup = append(mock.calls.Backup, callInfo)
	mock.lockBackup.Unlock()
	return mock.BackupFunc(ctx, w)
}

// BackupCalls gets all the calls that were made to Backup.
// Check the length with:
//
//	len(mockedStorageEngine.BackupCalls())
func (mock *StorageEngineMock) BackupCalls() []struct {
	Ctx context.Context
	W   io.Writer
} {
	var calls []struct {
		Ctx context.Context
		W   io.Writer
	}
	mock.lockBackup.RLock()
	calls = mock.calls.Backup
	mock.lockBackup.RUnlock()
	return calls
}

// ResetBackupCalls reset all the calls that were made to Backup.
func (mock *StorageEngineMock) ResetBackupCalls() {
	mock.lockBackup.Lock()
	mock.calls.Backup = nil
	mock.lockBackup.Unlock()
}

// ResetCalls reset all the calls that were made to all mocked methods.
func (mock *StorageEngineMock) ResetCalls() {
	mock.lockBackup.Lock()
	mock.calls.Backup = nil
	mock.lockBackup.Unlock()
}
